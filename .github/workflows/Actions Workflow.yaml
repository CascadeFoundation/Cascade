name: GitHub Actions Tests
run-name: Programs Are Being Tested On GitHub Actions 🚀

on:
  workflow_dispatch
  pull_request:
    branches: ["Production"]
  push:
    branches: ["Production"]

env:
  SENDGRID: '${{ secrets.SENDGRID }}'
  FIREBASE: '${{ secrets.FIREBASE }}'
  PYREBASE: '${{ secrets.PYREBASE }}'

jobs:
  Client-Server-Program-Test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Server Test Pipeline Triggered"
      - run: echo "🐧 Running On A Linux Server"

      - uses: actions/checkout@v4
      - name: Initialize Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install Python Dependencies
        run: |
          cd "${{ github.workspace }}/Commands/src/main/resources/Linux"
          bash "Install Dependencies Client.sh"

      - name: Test Server Application
        run: |
          cd "${{ github.workspace }}/Server/"
          python "Server Program.py"

      - name: Test Server Registrar
        run: |
          cd "${{ github.workspace }}/Server/"
          python "Register Server.py" "GitHub Actions Server" "3000"

      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"

  Image-Capture-Program-Test:
    needs: Client-Server-Program-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Image Capture Program"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Running Tests
        run: |
          cd "${{ github.workspace }}/Capture/Java/"
          chmod +x gradlew
          ./gradlew build
          ./gradlew check
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"

  Functions-Tests:
    needs: Client-Server-Program-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Python Functions"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v4
      - name: Initialize Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install Dependencies
        run: |
          cd "${{ github.workspace }}/Commands/src/main/resources/Linux"
          bash "Setup Functions.sh"
      - name: Test Card Maintenance Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "CardMaintenance.py"
      - name: Test Node Issuing Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "RegisterNodeFactory.py"
      - name: Test Cloud Messaging Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "CloudMessaging.py" -test
      - name: Test Node Reading Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "ReadNodes.py"
      - name: Test Device Revocation Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "RevokeDevices.py"
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"

  Shell-Program-Test:
    needs: Functions-Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Shell Program"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run Gradle Tests
        run: |
          cd "${{ github.workspace }}/Commands/"
          chmod +x gradlew
          ./gradlew build --stacktrace
          ./gradlew check
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"

  Android-Application-Test:
    needs: Client-Server-Program-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Android Application"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Run Gradle Tests
        run: |
          cd "${{ github.workspace }}/Android/"
          chmod +x gradlew
          ./gradlew build
          ./gradlew check
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"
  
  Enterprise-Server-Test:
    needs: Functions-Tests
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Enterprise Server"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v4
      - name: Initialize Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install Dependencies
        run: |
          cd "${{ github.workspace }}/Commands/src/main/resources/Linux"
          bash "Install Dependencies Enterprise.sh"
      - name: Test Enterprise Server Program
        run: |
          cd "${{ github.workspace }}/Provider/Server/"
          python3.12 "Server Program.py"
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"