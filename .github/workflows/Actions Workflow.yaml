name: GitHub Actions Tests
run-name: Programs Are Being Tested On GitHub Actions 🚀

on:
  pull_request:
    branches: ["Production"]
  push:
    branches: ["Production"]

jobs:
  Client-Server-Program-Test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Server Test Pipeline Triggered"
      - run: echo "🐧 Running On A Linux Server"

      - uses: actions/checkout@v4
      - name: Initialize Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install Flask
          python -m pip install Flask-Caching
          python -m pip install Flask-Compress
          python -m pip install pyrebase4
          python -m pip install firebase-admin
          python -m pip install uuid
          python -m pip install psutil
          python -m pip install flask_cors

      - name: Test Server Application
        run: |
          cd "${{ github.workspace }}/Server/"
          python "Server Program.py"

      - name: Test Server Registrar
        run: |
          cd "${{ github.workspace }}/Server/"
          python "Register Server.py" "GitHub Actions Server" "3000"

      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"
  
  Image-Capture-Program-Test:
    needs: Client-Server-Program-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Image Capture Program"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Running Tests
        run: |
          cd "${{ github.workspace }}/Capture/Java/"
          chmod +x gradlew
          ./gradlew build
          ./gradlew check
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"
  
  Functions-Tests:
    needs: Client-Server-Program-Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 Testing Python Functions"
      - run: echo "🐧 Running On A Linux Server"
      - name: Checkout The Repository
        uses: actions/checkout@v2
      - name: Initialize Python Environment
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install Dependencies
        run: |
          python3.12 -m pip install firebase_admin
      - name: Test Card Maintenance Function
        run: |
          cd "${{ github.workspace }}/Functions/"
          python3.12 "CardMaintenance.py"
      - name: Print Test Result
        run: |
          echo "👨‍💻 Test Result : ${{ job.status }}"